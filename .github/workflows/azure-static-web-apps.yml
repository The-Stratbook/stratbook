name: Deploy Azure Static Web App

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'infrastructure/**'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  repository_dispatch:
    types: [infrastructure-deployed]
  workflow_run:
    workflows:
      - Deploy Infrastructure and App
    types:
      - completed
  workflow_dispatch:
  workflow_call:

jobs:
  build-and-deploy-app:
    name: Build and Deploy Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install Linux build essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies with optional packages
        run: npm ci --include=optional

      - name: Debug node_modules content
        run: |
          echo "Checking @parcel/watcher installation..."
          ls -la node_modules/@parcel/watcher || echo "@parcel/watcher directory not found"
          echo "Node.js version:"
          node --version
          echo "NPM version:"
          npm --version

      - name: Build React App
        run: npm run build
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Deploy to Static Web App
        run: |
          npx @azure/static-web-apps-cli deploy \
            --app-location . \
            --api-location "" \
            --output-location build \
            --deployment-token "${{ secrets.STATIC_WEB_APP_TOKEN }}" \
            --env production

  validate-deployment:
    name: Validate Deployment
    runs-on: ubuntu-latest
    needs: build-and-deploy-app
    steps:
      - name: Check Deployment Status
        run: |
          APP_URL=$(az staticwebapp show \
            --name swa-thestratbook-prod \
            --query "defaultHostname" -o tsv)

          echo "Application deployed to: https://$APP_URL"

          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://$APP_URL)

          if [ $HTTP_STATUS -eq 200 ]; then
            echo "✅ Deployment validated successfully!"
          else
            echo "❌ Deployment validation failed! Status code: $HTTP_STATUS"
            exit 1
          fi